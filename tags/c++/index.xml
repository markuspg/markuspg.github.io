<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>c&#43;&#43; on Programming Pilgrim</title>
    <link>https://markuspg.github.io/tags/c&#43;&#43;/</link>
    <description>Recent content in c&#43;&#43; on Programming Pilgrim</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution ShareAlike 4.0 International License.</copyright>
    <lastBuildDate>Tue, 16 Jul 2019 21:54:45 +0200</lastBuildDate><atom:link href="https://markuspg.github.io/tags/c++/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Wrapping a C&#43;&#43; SDK with C&#43;&#43;/CLI</title>
      <link>https://markuspg.github.io/posts/cppcli/</link>
      <pubDate>Tue, 16 Jul 2019 21:54:45 +0200</pubDate>
      
      <guid>https://markuspg.github.io/posts/cppcli/</guid>
      <description>Recently at work I had to wrap a C++ SDK for usage in C#. My first try was using P/Invoke which seems to be the more portable way but soon this approach prove to be far too limited (through having to rely only on C linkage). Therefore my coworkers and me decided to utilize C++/CLI for which an introduction can be found here.
One basic problem is how to embed the unmanaged C++ classes from the SDK in managed C++/CLI ones.</description>
    </item>
    
  </channel>
</rss>
